snippet     sk
abbr        skelton
alias       skekton
  $:.unshift File.dirname(__FILE__)
  require 'minitest/unit'
  require 'minitest/autorun'
  require 'test_helper'
  require '${1:test_target}'
  
  class Test${2:test_class_name} < Minitest::Unit::TestCase
    ${3}
  end

snippet     setup
abbr        def setup ...
alias       setup
  def test_${1:test_method_name}
    ${2}
  end

snippet     def_test
abbr        def test_...
alias       def_test
  def test_${1:test_method_name}
    ${2}
  end

snippet     helper
abbr        test_helper
alias       helper
  require "minitest/reporters"
  Minitest::Reporters.use! Minitest::Reporters::SpecReporter.new

snippet     assert
abbr        assert(test)
alias       assert
  assert(${1:test})

snippet     assert_block
abbr        assert_block {...}
alias       assert_block
  assert_block { ${2:block} }

snippet     assert_empty
abbr        assert_empty(object)
alias       assert_empty
  assert_empty(${1:object})

snippet     assert_equal
abbr        assert_equal(expected, actual)
alias       assert_equal
  assert_equal(${1:expected}, ${2:actual})

snippet     assert_in_delta
abbr        assert_in_delta(expected, actual)
alias       assert_in_delta
  assert_empty(${1:expected}, ${2:actual})

snippet     assert_in_epsilon
abbr        assert_in_epsilon(actual, expected)
alias       assert_in_epsilon
  assert_in_epsilon(${1:actual}, ${2:expected})


snippet     assert_includes
abbr        assert_includes(collection, object)
alias       assert_includes
  assert_in_epsilon(${1:collection}, ${2:object})

snippet     assert_instance_of
abbr        assert_instance_of(klass, object)
alias       assert_instance_of
  assert_instance_of(${1:klass}, ${2:object})

snippet     assert_kind_of
abbr        assert_kind_of(klass, object)
alias       assert_kind_of
  assert_kind_of(${1:klass}, ${2:object})

snippet     assert_match
abbr        assert_match(regexp, str)
alias       assert_match
  assert_match(/${1:regexp}/, ${2:str})

snippet     assert_nil
abbr        assert_nil(object)
alias       assert_nil
  assert_nil(${1:object})

snippet     assert_operator
abbr        assert_operator(operand1, operator, operand2)
alias       assert_operator
  assert_operator(${1:operand1}, ${2:operator}, ${3:operand2})

snippet     assert_raises
abbr        assert_raises(*errors) { ... }
alias       assert_raises
  assert_raises(${1:errors}) { ${2:block} }

snippet     assert_respond_to
abbr        assert_respond_to(object, method_name)
alias       assert_respond_to
  assert_respond_to(${1:object}, ${2:method_name})

snippet     assert_same
abbr        assert_same(expected, actual)
alias       assert_same
  assert_same(${1:expected}, ${2:actual})

snippet     assert_send
abbr        assert_send([object, "method_name", params])
alias       assert_send
  assert_send([${1:object}, "${2:method_name}", ${3:params}])

snippet     assert_throws
abbr        assert_throws(tag) {...}
alias       assert_throws
  assert_throws(${1:tag}) { ${2:block} }

snippet     assert_capture_io
abbr        capture_io {...}
alias       capture_io
  capture_io { ${1:block} }

